<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ale on 1ミリもわからん</title><link>https://raahii.github.io/tags/ale/</link><description>Recent content in ale on 1ミリもわからん</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><lastBuildDate>Tue, 20 Sep 2022 00:30:00 +0900</lastBuildDate><atom:link href="https://raahii.github.io/tags/ale/index.xml" rel="self" type="application/rss+xml"/><item><title>Vim ALE と sql-formatter で SQL を整形する</title><link>https://raahii.github.io/posts/vim-ale-sql-formatter/</link><pubDate>Tue, 20 Sep 2022 00:30:00 +0900</pubDate><guid>https://raahii.github.io/posts/vim-ale-sql-formatter/</guid><description>最近データベーススペシャリストの勉強をしながら SQL を書いている中で、フォーマッタがほしいなと思ったので色々調査していた。Vim に ALE というリンタプラグインがあるが、公式でサポートしている SQL 向けのフォーマットは下記の4つだ（2022/09 時点）。
dprint pgformatter sqlfmt sqlformat ale/ale-sql.txt · dense-analysis/ale
一通り使ってみた中では pgformatter が良かった。設定が豊富で、それらを ~/.pg_format で管理することもできる。特に、コンマを行頭に持ってこれる整形オプションが好きで、こんなSQLが、
SELECTpo.idproduct_order_id,p.idproduct_id,p.nameproduct_name,po.num_ordersFROMproduct_orderpoJOINproductpONp.id=po.product_idWHEREp.is_set_product=TRUEこんな風にフォーマットされて良い。
SELECTpo.idproduct_order_id,p.idproduct_id,p.nameproduct_name,po.num_ordersFROMproduct_orderpoJOINproductpONp.id=po.product_idWHEREp.is_set_product=TRUEところが、使っている中でコメント周りやサブクエリ周りの整形が微妙なことがわかったのと、pgformatter は PostgreSQL 向けなのに対し、私は MySQL 向けのSQLを書くことが多いので、代替を探していた。
すると、巷では明らかに sql-formatter-org/sql-formatter が使われているようだった。例えばcoc-sql も採用している。サポートしているクエリ言語も手広いので、これを採用して ALE に組み込むことにした。
ALE では次のように任意のコマンドを組み込める。-l の言語指定はお好みで。
let g:ale_fixers = { ... \ &amp;#39;sql&amp;#39;: [ \ { buffer -&amp;gt; { \ &amp;#39;command&amp;#39;: &amp;#39;sql-formatter -l mysql&amp;#39; \ }}, \ ] \} これでめっちゃ快適にSQLを書けるようになった。
余談だが、仕事でもクエリを管理するためのレポがあって、DBオペの度にそこでレビュー受けてから実行するような運用なのだけれど、書き方が結構バラバラなので導入してみようかな。そういうチョットしたものでも、フォーマッタがある方が書く側もレビューする側も余計な時間を使わずに済んで良い。
あと、LSP があるのでなぜ未だに ALE つかっているの？と思う人もいるかも知れない。私は coc.</description></item></channel></rss>